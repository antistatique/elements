name: backstop-regression-testing
on:
  pull_request:
  workflow_dispatch:   # For debug purposes

permissions:           # https://github.com/EnricoMi/publish-unit-test-result-action/issues/161#issuecomment-905921434
  contents: read
  issues: write
  pull-requests: write
  checks: write

jobs:
  backstop:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        ref:
          - ${{ github.base_ref }}
          - ${{ github.head_ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.ref }}

      - name: Compute variables
      # See https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#environment-files
        run: |
          exec >> $GITHUB_ENV
          if [ "$current_ref" = "$base_ref" ]; then
            echo backstop_verb=reference
          else
            echo backstop_verb=test
          fi
        env:
          current_ref: ${{ matrix.ref }}
          base_ref: ${{ github.base_ref }}

      - uses: actions/setup-node@v2
        with:
          cache: yarn

      # Work around https://github.com/yarnpkg/yarn/issues/4890
      - name: Install dependencies
        run: yarn --frozen-lockfile --network-timeout 1000000

      - if: ${{ env.backstop_verb == 'test' }}
        name: Download baseline Backstop results from previous run
        uses: actions/download-artifact@v2
        with:
          name: backstop-report
          path: tests/backstop

      - name: Run Backstop
        run: |
          yarn start &
          for retry in $(seq 1 6); do if ! curl --silent -o /dev/null http://localhost:3000/ ; then sleep 10; fi; done
          node scripts/make_backstop_json.js
          npx backstop ${{ env.backstop_verb }} --config=build/backstop.json || true

      - uses: actions/upload-artifact@v2
        with:
          name: backstop-report
          path: tests/backstop

      - if: ${{ env.backstop_verb == 'test' }}
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          fail_on: nothing
          files: tests/backstop/ci_report/xunit.xml

      - if: ${{ env.backstop_verb == 'test' }}
        name: Link to artifact Zip in PR thread
        uses: actions/github-script@v5
        with:
          script: |
            function getPullRequestNumber (context) {
              return (((context || {}).payload || {}).pull_request || {}).number
            }
            async function upsertComment(owner, repo, issue_number, purpose, body) {
              const {data: comments} = await github.rest.issues.listComments({owner, repo, issue_number})

              const marker = `<!-- bot: ${purpose} -->`
              body = marker + `\n` + body

              const existing = comments.filter((c) => c.body.includes(marker))
              if (existing.length > 0) {
                const last = existing[existing.length - 1]
                core.info(`Updating comment ${last.id}`)
                await github.rest.issues.updateComment({
                    owner, repo,
                    body,
                    comment_id: last.id
                  })
              } else {
                core.info(`Creating a comment`);
                await github.rest.issues.createComment({issue_number, body, owner, repo})
              }
            }

            const pr_number = getPullRequestNumber(context)
            if (! pr_number) {
              return core.error(`Unable to figure out current pull request number`)
            }

            const { owner, repo } = context.repo

            const {data: {artifacts}} = await github.rest.actions.listWorkflowRunArtifacts({owner, repo, run_id: context.runId})
            let body = `ðŸ”Ž Download the Backstop report for this pull request (link valid for 90 days):\n`;
            for (const art of artifacts) {
              body += `\n* [${art.name}.zip](https://nightly.link/${owner}/${repo}/actions/artifacts/${art.id}.zip)`;
            }

            await upsertComment(owner, repo, pr_number, "download-backstop", body)
